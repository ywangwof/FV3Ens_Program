#!/bin/bash
#SBATCH -A smallqueue    # Allocation name (req'd if you have more than 1)
#SBATCH -p workq        # Queue (partition) name
#SBATCH -J fv3_regional
#SBATCH -o log.out.fv3_%j
#SBATCH -e log.err.fv3_%j
#SBATCH -N NODESN                 # Total # of nodes
#SBATCH -n NPEEEE                 # Total # of mpi tasks
#SBATCH -t 02:10:00               # Run time (hh:mm:ss)


export ymdh=EEEDDD
export ymd=`echo $ymdh |cut -c 1-8`
export yyy=`echo $ymdh |cut -c 1-4`
export mmm=`echo $ymdh |cut -c 5-6`
export ddd=`echo $ymdh |cut -c 7-8`
export hhh=`echo $ymdh |cut -c 9-10`

# should be defined in the calling script
CASE=CCCCCC
JCASE=JJJJJJ
ENDHOUR=HHHHHH

time1=$(date '+%s')
echo "Job Started: $(date). Job Id:  $SLURM_JOBID"
echo " "

ulimit -s unlimited
ulimit -a

export PSM_TID_SENDSESSIONS_MAX=16384
export OMP_NUM_THREADS=1
##export OMP_STACKSIZE=1024m
export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4
#export KMP_AFFINITY=scatter

export FIX_AM=FV3TTT/fix_am
export CO2DIR=$FIX_AM/fix_co2_proj

export templates=FV3TTT/templates

export FIXDIR=TTTDDD/grid_orog

WRKDIR=WWWDDD

cd $WRKDIR

cp $templates/diag_table diag_table
cp $templates/data_table .
cp $templates/field_table field_table
cp $templates/input_thompson_mynn.nml input.nml
cp $templates/model_configure model_configure
cp $templates/nems.configure .
cp $templates/CCN_ACTIVATE.BIN .
cp $templates/global_h2oprdlos.f77 .
cp $templates/global_o3prdlos.f77 .
cp $templates/suite_CAPS_cntl.xml .

sed -i -e "/YYYYMMDD/s/YYYYMMDD/$ymd/" diag_table
sed -i -e "/YYYY/s/YYYY/$yyy/"         diag_table
sed -i -e "/MM/s/MM/$mmm/"             diag_table
sed -i -e "/DD/s/DD/$ddd/"             diag_table
sed -i -e "/HH/s/HH/$hhh/"             diag_table

sed -i -e "/YYYY/s/YYYY/$yyy/" model_configure
sed -i -e "/MM/s/MM/$mmm/"     model_configure
sed -i -e "/DD/s/DD/$ddd/"     model_configure
sed -i -e "/HH/s/HH/$hhh/"     model_configure

layout_x="LYOXXX"
layout_y="LYOYYY"
io_layout="1,1"
npes=NPEEEE
nquilt=$(( npes-(layout_x*layout_y) ))


npx=NPXXXX
npy=NPYYYY

sed -i -e "/NTASK/s/NTASK/$nquilt/"  model_configure
sed -i -e "/NPES/s/NPES/${npes}/;/nhours_fcst/s/ENDHOUR/${ENDHOUR}/"  model_configure

sed -i -e "/LAYOUT/s/LAYOUTX/${layout_x}/;s/LAYOUTY/${layout_y}/" input.nml
sed -i -e "/LAYOUT/s/LAYOUTIO/${io_layout}/"                      input.nml
sed -i -e "/npx/s/NPX/${npx}/;/npy/s/NPY/${npy}/;/blocksize/s/30/BLOCKI/" input.nml

sed -i -e "/FIX_AM/s#FIX_AM#${FIX_AM}#"      input.nml

mkdir -p RESTART

cp -p $FIX_AM/global_solarconstant_noaa_an.txt  solarconstant_noaa_an.txt
cp -p $FIX_AM/global_o3prdlos.f77               global_o3prdlos.f77
cp -p $FIX_AM/global_sfc_emissivity_idx.txt     sfc_emissivity_idx.txt
cp -p $FIX_AM/global_co2historicaldata_glob.txt co2historicaldata_glob.txt
cp -p $FIX_AM/co2monthlycyc.txt                 co2monthlycyc.txt
cp -p $FIX_AM/global_climaeropac_global.txt     aerosol.dat

for file in `ls $CO2DIR/global_co2historicaldata* ` ; do
  cp $file $(echo $(basename $file) |sed -e "s/global_//g")
done

#-----------------------------------------------------------------------
# copy tile data and orography
#-----------------------------------------------------------------------
cp -p $FIXDIR/${CASE}_grid.tile7.halo3.nc INPUT/
cp -p $FIXDIR/${CASE}_grid.tile7.halo4.nc INPUT/
cp -p $FIXDIR/${CASE}_mosaic.nc INPUT/

cp -p $FIXDIR/${CASE}_oro_data.tile7.halo0.nc INPUT/
cp -p $FIXDIR/${CASE}_oro_data.tile7.halo4.nc INPUT/

cd INPUT
ln -sf ${CASE}_grid.tile7.halo3.nc     ${CASE}_grid.tile7.nc
ln -sf ${CASE}_grid.tile7.halo4.nc     grid.tile7.halo4.nc
ln -sf ${CASE}_oro_data.tile7.halo4.nc ${CASE}_oro_data.tile7.nc
ln -sf ${CASE}_oro_data.tile7.halo4.nc oro_data.tile7.halo4.nc
ln -sf ${CASE}_oro_data.tile7.halo4.nc oro_data.tile7.nc
ln -sf ${CASE}_oro_data.tile7.halo4.nc oro_data.nc
ln -sf ${CASE}_mosaic.nc               grid_spec.nc
ln -sf ${CASE}_grid.tile7.nc           ${JCASE}_grid.tile7.nc

cd $WRKDIR

#-----------------------------------------------------------------------
# find centeral lat/lon
#-----------------------------------------------------------------------
fn="INPUT/${JCASE}_grid.tile7.nc"

function ncattget {
  #ncks -m -M $1 | grep -E "^Global attribute [0-9]+: (CEN_LAT|CEN_LON|TRUELAT1|TRUELAT2|STAND_LON)" | cut -f 4,11 -d ' '
  /scratch/software/Odin/python/anaconda2/bin/ncks -x -M $1 | grep -E "(plat|plon)"
}

domains=$(ncattget $fn)

IFS=$'\n' domelements=($domains)
for var in ${domelements[@]}; do
  IFS='= ' keyval=(${var##Global attribute *:})
  wrfkey=${keyval[0]%%,}
  val=${keyval[-1]}

  case $wrfkey in
    plat)
      key="tlat"
      ;;
    plon)
      key="tlon"
      ;;
    *)
      key=${wrfkey}
      ;;
  esac
  declare "$key=$val"
  echo "$key -> $val"
done

sed -i -e "/CENLAT/s/CENLAT/${tlat}/;s/CENLON/${tlon}/" input.nml

#-----------------------------------------------------------------------
# copy GFS datasets
#-----------------------------------------------------------------------
#

cd INPUT
ln -sf gfs_data.tile7.nc gfs_data.nc
ln -sf sfc_data.tile7.nc sfc_data.nc


cd $WRKDIR

set -x

echo "Model started:  " `date`

export MPI_TYPE_DEPTH=20
export OMP_STACKSIZE=512M
export OMP_NUM_THREADS=2
export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4

ulimit -a

#-----------------------------------------------------------------------
# run the FV3 job
#-----------------------------------------------------------------------
#

ln -sf EXEPPP fv3_gfs.x

srun ./fv3_gfs.x

touch done.fv3

time2=$(date '+%s')

let diff=time2-time1
let hour=diff/3600
let diff=diff%3600
let min=diff/60
let sec=diff%60

echo -n "Job   Ended: $(date). "
printf 'Job run time:  %02d:%02d:%02d' $hour $min $sec
echo " "

exit

